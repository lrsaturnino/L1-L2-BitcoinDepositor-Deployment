/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type BitcoinTxInfoStruct = {
  version: BytesLike;
  inputVector: BytesLike;
  outputVector: BytesLike;
  locktime: BytesLike;
};

export type BitcoinTxInfoStructOutput = [string, string, string, string] & {
  version: string;
  inputVector: string;
  outputVector: string;
  locktime: string;
};

export type DepositRevealInfoStruct = {
  fundingOutputIndex: BigNumberish;
  blindingFactor: BytesLike;
  walletPubKeyHash: BytesLike;
  refundPubKeyHash: BytesLike;
  refundLocktime: BytesLike;
  vault: string;
};

export type DepositRevealInfoStructOutput = [
  number,
  string,
  string,
  string,
  string,
  string
] & {
  fundingOutputIndex: number;
  blindingFactor: string;
  walletPubKeyHash: string;
  refundPubKeyHash: string;
  refundLocktime: string;
  vault: string;
};

export interface L1BitcoinDepositorInterface extends utils.Interface {
  functions: {
    "SATOSHI_MULTIPLIER()": FunctionFragment;
    "attachL2BitcoinDepositor(address)": FunctionFragment;
    "bridge()": FunctionFragment;
    "deposits(uint256)": FunctionFragment;
    "finalizeDeposit(uint256)": FunctionFragment;
    "finalizeDepositGasOffset()": FunctionFragment;
    "gasReimbursements(uint256)": FunctionFragment;
    "initialize(address,address,address,address,address,address,uint16)": FunctionFragment;
    "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)": FunctionFragment;
    "initializeDepositGasOffset()": FunctionFragment;
    "l2BitcoinDepositor()": FunctionFragment;
    "l2ChainId()": FunctionFragment;
    "l2FinalizeDepositGasLimit()": FunctionFragment;
    "l2WormholeGateway()": FunctionFragment;
    "owner()": FunctionFragment;
    "quoteFinalizeDeposit()": FunctionFragment;
    "reimburseTxMaxFee()": FunctionFragment;
    "reimbursementAuthorizations(address)": FunctionFragment;
    "reimbursementPool()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setReimburseTxMaxFee(bool)": FunctionFragment;
    "tbtcToken()": FunctionFragment;
    "tbtcVault()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "updateGasOffsetParameters(uint256,uint256)": FunctionFragment;
    "updateL2FinalizeDepositGasLimit(uint256)": FunctionFragment;
    "updateReimbursementAuthorization(address,bool)": FunctionFragment;
    "updateReimbursementPool(address)": FunctionFragment;
    "wormhole()": FunctionFragment;
    "wormholeRelayer()": FunctionFragment;
    "wormholeTokenBridge()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "SATOSHI_MULTIPLIER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "attachL2BitcoinDepositor",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "bridge", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "deposits",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeDeposit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeDepositGasOffset",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "gasReimbursements",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeDeposit",
    values: [BitcoinTxInfoStruct, DepositRevealInfoStruct, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeDepositGasOffset",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "l2BitcoinDepositor",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "l2ChainId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "l2FinalizeDepositGasLimit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "l2WormholeGateway",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "quoteFinalizeDeposit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "reimburseTxMaxFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "reimbursementAuthorizations",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "reimbursementPool",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setReimburseTxMaxFee",
    values: [boolean]
  ): string;
  encodeFunctionData(functionFragment: "tbtcToken", values?: undefined): string;
  encodeFunctionData(functionFragment: "tbtcVault", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateGasOffsetParameters",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateL2FinalizeDepositGasLimit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateReimbursementAuthorization",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "updateReimbursementPool",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "wormhole", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "wormholeRelayer",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "wormholeTokenBridge",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "SATOSHI_MULTIPLIER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "attachL2BitcoinDepositor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "bridge", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deposits", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "finalizeDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalizeDepositGasOffset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gasReimbursements",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initializeDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initializeDepositGasOffset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "l2BitcoinDepositor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "l2ChainId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "l2FinalizeDepositGasLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "l2WormholeGateway",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "quoteFinalizeDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reimburseTxMaxFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reimbursementAuthorizations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reimbursementPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReimburseTxMaxFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tbtcToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tbtcVault", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateGasOffsetParameters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateL2FinalizeDepositGasLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateReimbursementAuthorization",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateReimbursementPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "wormhole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "wormholeRelayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "wormholeTokenBridge",
    data: BytesLike
  ): Result;

  events: {
    "DepositFinalized(uint256,address,address,uint256,uint256)": EventFragment;
    "DepositInitialized(uint256,address,address)": EventFragment;
    "GasOffsetParametersUpdated(uint256,uint256)": EventFragment;
    "Initialized(uint8)": EventFragment;
    "L2FinalizeDepositGasLimitUpdated(uint256)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "ReimburseTxMaxFeeUpdated(bool)": EventFragment;
    "ReimbursementAuthorizationUpdated(address,bool)": EventFragment;
    "ReimbursementPoolUpdated(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DepositFinalized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositInitialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GasOffsetParametersUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "L2FinalizeDepositGasLimitUpdated"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReimburseTxMaxFeeUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReimbursementAuthorizationUpdated"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReimbursementPoolUpdated"): EventFragment;
}

export type DepositFinalizedEvent = TypedEvent<
  [BigNumber, string, string, BigNumber, BigNumber],
  {
    depositKey: BigNumber;
    l2DepositOwner: string;
    l1Sender: string;
    initialAmount: BigNumber;
    tbtcAmount: BigNumber;
  }
>;

export type DepositFinalizedEventFilter =
  TypedEventFilter<DepositFinalizedEvent>;

export type DepositInitializedEvent = TypedEvent<
  [BigNumber, string, string],
  { depositKey: BigNumber; l2DepositOwner: string; l1Sender: string }
>;

export type DepositInitializedEventFilter =
  TypedEventFilter<DepositInitializedEvent>;

export type GasOffsetParametersUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber],
  { initializeDepositGasOffset: BigNumber; finalizeDepositGasOffset: BigNumber }
>;

export type GasOffsetParametersUpdatedEventFilter =
  TypedEventFilter<GasOffsetParametersUpdatedEvent>;

export type InitializedEvent = TypedEvent<[number], { version: number }>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export type L2FinalizeDepositGasLimitUpdatedEvent = TypedEvent<
  [BigNumber],
  { l2FinalizeDepositGasLimit: BigNumber }
>;

export type L2FinalizeDepositGasLimitUpdatedEventFilter =
  TypedEventFilter<L2FinalizeDepositGasLimitUpdatedEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export type ReimburseTxMaxFeeUpdatedEvent = TypedEvent<
  [boolean],
  { reimburseTxMaxFee: boolean }
>;

export type ReimburseTxMaxFeeUpdatedEventFilter =
  TypedEventFilter<ReimburseTxMaxFeeUpdatedEvent>;

export type ReimbursementAuthorizationUpdatedEvent = TypedEvent<
  [string, boolean],
  { _address: string; authorization: boolean }
>;

export type ReimbursementAuthorizationUpdatedEventFilter =
  TypedEventFilter<ReimbursementAuthorizationUpdatedEvent>;

export type ReimbursementPoolUpdatedEvent = TypedEvent<
  [string],
  { newReimbursementPool: string }
>;

export type ReimbursementPoolUpdatedEventFilter =
  TypedEventFilter<ReimbursementPoolUpdatedEvent>;

export interface L1BitcoinDepositor extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: L1BitcoinDepositorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    SATOSHI_MULTIPLIER(overrides?: CallOverrides): Promise<[BigNumber]>;

    attachL2BitcoinDepositor(
      _l2BitcoinDepositor: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bridge(overrides?: CallOverrides): Promise<[string]>;

    deposits(arg0: BigNumberish, overrides?: CallOverrides): Promise<[number]>;

    finalizeDeposit(
      depositKey: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    finalizeDepositGasOffset(overrides?: CallOverrides): Promise<[BigNumber]>;

    gasReimbursements(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { receiver: string; gasSpent: BigNumber }>;

    initialize(
      _tbtcBridge: string,
      _tbtcVault: string,
      _wormhole: string,
      _wormholeRelayer: string,
      _wormholeTokenBridge: string,
      _l2WormholeGateway: string,
      _l2ChainId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initializeDeposit(
      fundingTx: BitcoinTxInfoStruct,
      reveal: DepositRevealInfoStruct,
      l2DepositOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initializeDepositGasOffset(overrides?: CallOverrides): Promise<[BigNumber]>;

    l2BitcoinDepositor(overrides?: CallOverrides): Promise<[string]>;

    l2ChainId(overrides?: CallOverrides): Promise<[number]>;

    l2FinalizeDepositGasLimit(overrides?: CallOverrides): Promise<[BigNumber]>;

    l2WormholeGateway(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    quoteFinalizeDeposit(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { cost: BigNumber }>;

    reimburseTxMaxFee(overrides?: CallOverrides): Promise<[boolean]>;

    reimbursementAuthorizations(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    reimbursementPool(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setReimburseTxMaxFee(
      _reimburseTxMaxFee: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    tbtcToken(overrides?: CallOverrides): Promise<[string]>;

    tbtcVault(overrides?: CallOverrides): Promise<[string]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateGasOffsetParameters(
      _initializeDepositGasOffset: BigNumberish,
      _finalizeDepositGasOffset: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateL2FinalizeDepositGasLimit(
      _l2FinalizeDepositGasLimit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateReimbursementAuthorization(
      _address: string,
      authorization: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateReimbursementPool(
      _reimbursementPool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    wormhole(overrides?: CallOverrides): Promise<[string]>;

    wormholeRelayer(overrides?: CallOverrides): Promise<[string]>;

    wormholeTokenBridge(overrides?: CallOverrides): Promise<[string]>;
  };

  SATOSHI_MULTIPLIER(overrides?: CallOverrides): Promise<BigNumber>;

  attachL2BitcoinDepositor(
    _l2BitcoinDepositor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bridge(overrides?: CallOverrides): Promise<string>;

  deposits(arg0: BigNumberish, overrides?: CallOverrides): Promise<number>;

  finalizeDeposit(
    depositKey: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  finalizeDepositGasOffset(overrides?: CallOverrides): Promise<BigNumber>;

  gasReimbursements(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { receiver: string; gasSpent: BigNumber }>;

  initialize(
    _tbtcBridge: string,
    _tbtcVault: string,
    _wormhole: string,
    _wormholeRelayer: string,
    _wormholeTokenBridge: string,
    _l2WormholeGateway: string,
    _l2ChainId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initializeDeposit(
    fundingTx: BitcoinTxInfoStruct,
    reveal: DepositRevealInfoStruct,
    l2DepositOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initializeDepositGasOffset(overrides?: CallOverrides): Promise<BigNumber>;

  l2BitcoinDepositor(overrides?: CallOverrides): Promise<string>;

  l2ChainId(overrides?: CallOverrides): Promise<number>;

  l2FinalizeDepositGasLimit(overrides?: CallOverrides): Promise<BigNumber>;

  l2WormholeGateway(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  quoteFinalizeDeposit(overrides?: CallOverrides): Promise<BigNumber>;

  reimburseTxMaxFee(overrides?: CallOverrides): Promise<boolean>;

  reimbursementAuthorizations(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  reimbursementPool(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setReimburseTxMaxFee(
    _reimburseTxMaxFee: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  tbtcToken(overrides?: CallOverrides): Promise<string>;

  tbtcVault(overrides?: CallOverrides): Promise<string>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateGasOffsetParameters(
    _initializeDepositGasOffset: BigNumberish,
    _finalizeDepositGasOffset: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateL2FinalizeDepositGasLimit(
    _l2FinalizeDepositGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateReimbursementAuthorization(
    _address: string,
    authorization: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateReimbursementPool(
    _reimbursementPool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  wormhole(overrides?: CallOverrides): Promise<string>;

  wormholeRelayer(overrides?: CallOverrides): Promise<string>;

  wormholeTokenBridge(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    SATOSHI_MULTIPLIER(overrides?: CallOverrides): Promise<BigNumber>;

    attachL2BitcoinDepositor(
      _l2BitcoinDepositor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    bridge(overrides?: CallOverrides): Promise<string>;

    deposits(arg0: BigNumberish, overrides?: CallOverrides): Promise<number>;

    finalizeDeposit(
      depositKey: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    finalizeDepositGasOffset(overrides?: CallOverrides): Promise<BigNumber>;

    gasReimbursements(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { receiver: string; gasSpent: BigNumber }>;

    initialize(
      _tbtcBridge: string,
      _tbtcVault: string,
      _wormhole: string,
      _wormholeRelayer: string,
      _wormholeTokenBridge: string,
      _l2WormholeGateway: string,
      _l2ChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    initializeDeposit(
      fundingTx: BitcoinTxInfoStruct,
      reveal: DepositRevealInfoStruct,
      l2DepositOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initializeDepositGasOffset(overrides?: CallOverrides): Promise<BigNumber>;

    l2BitcoinDepositor(overrides?: CallOverrides): Promise<string>;

    l2ChainId(overrides?: CallOverrides): Promise<number>;

    l2FinalizeDepositGasLimit(overrides?: CallOverrides): Promise<BigNumber>;

    l2WormholeGateway(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    quoteFinalizeDeposit(overrides?: CallOverrides): Promise<BigNumber>;

    reimburseTxMaxFee(overrides?: CallOverrides): Promise<boolean>;

    reimbursementAuthorizations(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    reimbursementPool(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setReimburseTxMaxFee(
      _reimburseTxMaxFee: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    tbtcToken(overrides?: CallOverrides): Promise<string>;

    tbtcVault(overrides?: CallOverrides): Promise<string>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateGasOffsetParameters(
      _initializeDepositGasOffset: BigNumberish,
      _finalizeDepositGasOffset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateL2FinalizeDepositGasLimit(
      _l2FinalizeDepositGasLimit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateReimbursementAuthorization(
      _address: string,
      authorization: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    updateReimbursementPool(
      _reimbursementPool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    wormhole(overrides?: CallOverrides): Promise<string>;

    wormholeRelayer(overrides?: CallOverrides): Promise<string>;

    wormholeTokenBridge(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "DepositFinalized(uint256,address,address,uint256,uint256)"(
      depositKey?: BigNumberish | null,
      l2DepositOwner?: string | null,
      l1Sender?: string | null,
      initialAmount?: null,
      tbtcAmount?: null
    ): DepositFinalizedEventFilter;
    DepositFinalized(
      depositKey?: BigNumberish | null,
      l2DepositOwner?: string | null,
      l1Sender?: string | null,
      initialAmount?: null,
      tbtcAmount?: null
    ): DepositFinalizedEventFilter;

    "DepositInitialized(uint256,address,address)"(
      depositKey?: BigNumberish | null,
      l2DepositOwner?: string | null,
      l1Sender?: string | null
    ): DepositInitializedEventFilter;
    DepositInitialized(
      depositKey?: BigNumberish | null,
      l2DepositOwner?: string | null,
      l1Sender?: string | null
    ): DepositInitializedEventFilter;

    "GasOffsetParametersUpdated(uint256,uint256)"(
      initializeDepositGasOffset?: null,
      finalizeDepositGasOffset?: null
    ): GasOffsetParametersUpdatedEventFilter;
    GasOffsetParametersUpdated(
      initializeDepositGasOffset?: null,
      finalizeDepositGasOffset?: null
    ): GasOffsetParametersUpdatedEventFilter;

    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "L2FinalizeDepositGasLimitUpdated(uint256)"(
      l2FinalizeDepositGasLimit?: null
    ): L2FinalizeDepositGasLimitUpdatedEventFilter;
    L2FinalizeDepositGasLimitUpdated(
      l2FinalizeDepositGasLimit?: null
    ): L2FinalizeDepositGasLimitUpdatedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "ReimburseTxMaxFeeUpdated(bool)"(
      reimburseTxMaxFee?: null
    ): ReimburseTxMaxFeeUpdatedEventFilter;
    ReimburseTxMaxFeeUpdated(
      reimburseTxMaxFee?: null
    ): ReimburseTxMaxFeeUpdatedEventFilter;

    "ReimbursementAuthorizationUpdated(address,bool)"(
      _address?: string | null,
      authorization?: null
    ): ReimbursementAuthorizationUpdatedEventFilter;
    ReimbursementAuthorizationUpdated(
      _address?: string | null,
      authorization?: null
    ): ReimbursementAuthorizationUpdatedEventFilter;

    "ReimbursementPoolUpdated(address)"(
      newReimbursementPool?: null
    ): ReimbursementPoolUpdatedEventFilter;
    ReimbursementPoolUpdated(
      newReimbursementPool?: null
    ): ReimbursementPoolUpdatedEventFilter;
  };

  estimateGas: {
    SATOSHI_MULTIPLIER(overrides?: CallOverrides): Promise<BigNumber>;

    attachL2BitcoinDepositor(
      _l2BitcoinDepositor: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bridge(overrides?: CallOverrides): Promise<BigNumber>;

    deposits(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    finalizeDeposit(
      depositKey: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    finalizeDepositGasOffset(overrides?: CallOverrides): Promise<BigNumber>;

    gasReimbursements(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _tbtcBridge: string,
      _tbtcVault: string,
      _wormhole: string,
      _wormholeRelayer: string,
      _wormholeTokenBridge: string,
      _l2WormholeGateway: string,
      _l2ChainId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initializeDeposit(
      fundingTx: BitcoinTxInfoStruct,
      reveal: DepositRevealInfoStruct,
      l2DepositOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initializeDepositGasOffset(overrides?: CallOverrides): Promise<BigNumber>;

    l2BitcoinDepositor(overrides?: CallOverrides): Promise<BigNumber>;

    l2ChainId(overrides?: CallOverrides): Promise<BigNumber>;

    l2FinalizeDepositGasLimit(overrides?: CallOverrides): Promise<BigNumber>;

    l2WormholeGateway(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    quoteFinalizeDeposit(overrides?: CallOverrides): Promise<BigNumber>;

    reimburseTxMaxFee(overrides?: CallOverrides): Promise<BigNumber>;

    reimbursementAuthorizations(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    reimbursementPool(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setReimburseTxMaxFee(
      _reimburseTxMaxFee: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    tbtcToken(overrides?: CallOverrides): Promise<BigNumber>;

    tbtcVault(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateGasOffsetParameters(
      _initializeDepositGasOffset: BigNumberish,
      _finalizeDepositGasOffset: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateL2FinalizeDepositGasLimit(
      _l2FinalizeDepositGasLimit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateReimbursementAuthorization(
      _address: string,
      authorization: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateReimbursementPool(
      _reimbursementPool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    wormhole(overrides?: CallOverrides): Promise<BigNumber>;

    wormholeRelayer(overrides?: CallOverrides): Promise<BigNumber>;

    wormholeTokenBridge(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    SATOSHI_MULTIPLIER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    attachL2BitcoinDepositor(
      _l2BitcoinDepositor: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bridge(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    deposits(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    finalizeDeposit(
      depositKey: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    finalizeDepositGasOffset(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    gasReimbursements(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _tbtcBridge: string,
      _tbtcVault: string,
      _wormhole: string,
      _wormholeRelayer: string,
      _wormholeTokenBridge: string,
      _l2WormholeGateway: string,
      _l2ChainId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initializeDeposit(
      fundingTx: BitcoinTxInfoStruct,
      reveal: DepositRevealInfoStruct,
      l2DepositOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initializeDepositGasOffset(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    l2BitcoinDepositor(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    l2ChainId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    l2FinalizeDepositGasLimit(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    l2WormholeGateway(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    quoteFinalizeDeposit(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    reimburseTxMaxFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    reimbursementAuthorizations(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    reimbursementPool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setReimburseTxMaxFee(
      _reimburseTxMaxFee: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    tbtcToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tbtcVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateGasOffsetParameters(
      _initializeDepositGasOffset: BigNumberish,
      _finalizeDepositGasOffset: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateL2FinalizeDepositGasLimit(
      _l2FinalizeDepositGasLimit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateReimbursementAuthorization(
      _address: string,
      authorization: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateReimbursementPool(
      _reimbursementPool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    wormhole(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    wormholeRelayer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    wormholeTokenBridge(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
