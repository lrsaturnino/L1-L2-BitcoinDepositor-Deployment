/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ITBTCVault, ITBTCVaultInterface } from "../ITBTCVault";

const _abi = [
  {
    inputs: [],
    name: "optimisticMintingFeeDivisor",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositKey",
        type: "uint256",
      },
    ],
    name: "optimisticMintingRequests",
    outputs: [
      {
        internalType: "uint64",
        name: "requestedAt",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "finalizedAt",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tbtcToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ITBTCVault__factory {
  static readonly abi = _abi;
  static createInterface(): ITBTCVaultInterface {
    return new utils.Interface(_abi) as ITBTCVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITBTCVault {
    return new Contract(address, _abi, signerOrProvider) as ITBTCVault;
  }
}
