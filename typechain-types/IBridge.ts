/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type DepositRequestStruct = {
  depositor: string;
  amount: BigNumberish;
  revealedAt: BigNumberish;
  vault: string;
  treasuryFee: BigNumberish;
  sweptAt: BigNumberish;
  extraData: BytesLike;
};

export type DepositRequestStructOutput = [
  string,
  BigNumber,
  number,
  string,
  BigNumber,
  number,
  string
] & {
  depositor: string;
  amount: BigNumber;
  revealedAt: number;
  vault: string;
  treasuryFee: BigNumber;
  sweptAt: number;
  extraData: string;
};

export type BitcoinTxInfoStruct = {
  version: BytesLike;
  inputVector: BytesLike;
  outputVector: BytesLike;
  locktime: BytesLike;
};

export type BitcoinTxInfoStructOutput = [string, string, string, string] & {
  version: string;
  inputVector: string;
  outputVector: string;
  locktime: string;
};

export type DepositRevealInfoStruct = {
  fundingOutputIndex: BigNumberish;
  blindingFactor: BytesLike;
  walletPubKeyHash: BytesLike;
  refundPubKeyHash: BytesLike;
  refundLocktime: BytesLike;
  vault: string;
};

export type DepositRevealInfoStructOutput = [
  number,
  string,
  string,
  string,
  string,
  string
] & {
  fundingOutputIndex: number;
  blindingFactor: string;
  walletPubKeyHash: string;
  refundPubKeyHash: string;
  refundLocktime: string;
  vault: string;
};

export interface IBridgeInterface extends utils.Interface {
  functions: {
    "depositParameters()": FunctionFragment;
    "deposits(uint256)": FunctionFragment;
    "revealDepositWithExtraData((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),bytes32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "depositParameters",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deposits",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "revealDepositWithExtraData",
    values: [BitcoinTxInfoStruct, DepositRevealInfoStruct, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "depositParameters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deposits", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "revealDepositWithExtraData",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IBridge extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IBridgeInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    depositParameters(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, number] & {
        depositDustThreshold: BigNumber;
        depositTreasuryFeeDivisor: BigNumber;
        depositTxMaxFee: BigNumber;
        depositRevealAheadPeriod: number;
      }
    >;

    deposits(
      depositKey: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[DepositRequestStructOutput]>;

    revealDepositWithExtraData(
      fundingTx: BitcoinTxInfoStruct,
      reveal: DepositRevealInfoStruct,
      extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  depositParameters(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, number] & {
      depositDustThreshold: BigNumber;
      depositTreasuryFeeDivisor: BigNumber;
      depositTxMaxFee: BigNumber;
      depositRevealAheadPeriod: number;
    }
  >;

  deposits(
    depositKey: BigNumberish,
    overrides?: CallOverrides
  ): Promise<DepositRequestStructOutput>;

  revealDepositWithExtraData(
    fundingTx: BitcoinTxInfoStruct,
    reveal: DepositRevealInfoStruct,
    extraData: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    depositParameters(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, number] & {
        depositDustThreshold: BigNumber;
        depositTreasuryFeeDivisor: BigNumber;
        depositTxMaxFee: BigNumber;
        depositRevealAheadPeriod: number;
      }
    >;

    deposits(
      depositKey: BigNumberish,
      overrides?: CallOverrides
    ): Promise<DepositRequestStructOutput>;

    revealDepositWithExtraData(
      fundingTx: BitcoinTxInfoStruct,
      reveal: DepositRevealInfoStruct,
      extraData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    depositParameters(overrides?: CallOverrides): Promise<BigNumber>;

    deposits(
      depositKey: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    revealDepositWithExtraData(
      fundingTx: BitcoinTxInfoStruct,
      reveal: DepositRevealInfoStruct,
      extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    depositParameters(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    deposits(
      depositKey: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    revealDepositWithExtraData(
      fundingTx: BitcoinTxInfoStruct,
      reveal: DepositRevealInfoStruct,
      extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
