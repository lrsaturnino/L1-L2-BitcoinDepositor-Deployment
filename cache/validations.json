{
  "version": "3.4",
  "log": [
    {
      "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BTCUtils.sol:9",
        "version": {
          "withMetadata": "7573bef287f88183403789c7e64d2dbc09470b7f55a1348931f8583c1c0987b0",
          "withoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7",
          "linkedWithoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7"
        },
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib",
          "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BytesLib.sol:37",
        "version": {
          "withMetadata": "f2324c71bbe5c8ab35be27d9c50370bf7edf1df6eddf6f369c89c4576118f97f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\SafeMath.sol:33",
        "version": {
          "withMetadata": "de6c9018e6b700296910d156838bc9d0b8ee1110e9b7ccadb24a629f990d5633",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable": {
        "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateReimbursementPool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/ReimbursementPool.sol:ReimbursementPool": {
        "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:48",
        "version": {
          "withMetadata": "a0909f9ca2505d43aae4c412e68c131a562c6f0e55209341952931ca00b953c3",
          "withoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8",
          "linkedWithoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "()",
          "refund(uint256,address)",
          "authorize(address)",
          "unauthorize(address)",
          "setStaticGas(uint256)",
          "setMaxGasPrice(uint256)",
          "withdrawAll(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReimbursementPool",
            "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "isAuthorized",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:55"
            },
            {
              "label": "staticGas",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:57"
            },
            {
              "label": "maxGasPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\utils\\SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "1e4ce95e9a357149db70bc9b9fafc8133910fcc1b2cb441a653064c3fb71deab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "745fe1cc954bf11dcefd69031b31c0c74765abeb5690985ab59dd076464c864c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor": {
        "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:92",
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)4795",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)4821",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_contract(IBridge)4795": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)4821": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridge": {
        "src": "contracts\\integrator\\IBridge.sol:70",
        "inherit": [],
        "libraries": [],
        "methods": [
          "revealDepositWithExtraData((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),bytes32)",
          "deposits(uint256)",
          "depositParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridgeTypes": {
        "src": "contracts\\integrator\\IBridge.sol:39",
        "version": {
          "withMetadata": "b50dd107ae761f3ab15fcd9edceaa3ebc151908aa4224c0d269afbefb04b5fd9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/ITBTCVault.sol:ITBTCVault": {
        "src": "contracts\\integrator\\ITBTCVault.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "optimisticMintingRequests(uint256)",
          "optimisticMintingFeeDivisor()",
          "tbtcToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/L1BitcoinDepositor.sol:L1BitcoinDepositor": {
        "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:82",
        "version": {
          "withMetadata": "8340d8ab698f10b95cb3bb7f83ba4bff1b5ea8e8e24f8e0bed7eaf9d9200914f",
          "withoutMetadata": "a6ee8e05616cabffb964a1fbfba6d1a425cf126ec5a864cdb7d7c660b3cde83e",
          "linkedWithoutMetadata": "a6ee8e05616cabffb964a1fbfba6d1a425cf126ec5a864cdb7d7c660b3cde83e"
        },
        "inherit": [
          "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "contracts/sepolia/Wormhole.sol:WormholeUtils",
          "contracts/sepolia/Wormhole.sol:WormholeTypes"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,address,uint16)",
          "attachL2BitcoinDepositor(address)",
          "updateL2FinalizeDepositGasLimit(uint256)",
          "updateGasOffsetParameters(uint256,uint256)",
          "updateReimbursementAuthorization(address,bool)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "finalizeDeposit(uint256)",
          "quoteFinalizeDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)4795",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)4821",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "49",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "49",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "50",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "100",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "150",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "200",
              "type": "t_mapping(t_uint256,t_enum(DepositState)4846)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:111"
            },
            {
              "label": "tbtcToken",
              "offset": 0,
              "slot": "201",
              "type": "t_contract(IERC20Upgradeable)3379",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:113"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "202",
              "type": "t_contract(IWormhole)5684",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:115"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "203",
              "type": "t_contract(IWormholeRelayer)5724",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:116"
            },
            {
              "label": "wormholeTokenBridge",
              "offset": 0,
              "slot": "204",
              "type": "t_contract(IWormholeTokenBridge)5809",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:117"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:119"
            },
            {
              "label": "l2ChainId",
              "offset": 20,
              "slot": "205",
              "type": "t_uint16",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:121"
            },
            {
              "label": "l2BitcoinDepositor",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:123"
            },
            {
              "label": "l2FinalizeDepositGasLimit",
              "offset": 0,
              "slot": "207",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:128"
            },
            {
              "label": "gasReimbursements",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_uint256,t_struct(GasReimbursement)4853_storage)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:137"
            },
            {
              "label": "initializeDepositGasOffset",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:140"
            },
            {
              "label": "finalizeDepositGasOffset",
              "offset": 0,
              "slot": "210",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:146"
            },
            {
              "label": "reimbursementAuthorizations",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBridge)4795": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)3379": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)4821": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)5684": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)5724": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeTokenBridge)5809": {
              "label": "contract IWormholeTokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_enum(DepositState)4846": {
              "label": "enum L1BitcoinDepositor.DepositState",
              "members": [
                "Unknown",
                "Initialized",
                "Finalized"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(DepositState)4846)": {
              "label": "mapping(uint256 => enum L1BitcoinDepositor.DepositState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GasReimbursement)4853_storage)": {
              "label": "mapping(uint256 => struct L1BitcoinDepositor.GasReimbursement)",
              "numberOfBytes": "32"
            },
            "t_struct(GasReimbursement)4853_storage": {
              "label": "struct L1BitcoinDepositor.GasReimbursement",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "gasSpent",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\sepolia\\Wormhole.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\sepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\sepolia\\Wormhole.sol:54",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\sepolia\\Wormhole.sol:102",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\sepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "d5c171dbdea343879b0f6e66f8b85c4ace2e1ae0dbc109aa34ff9703a61d6dc6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\sepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "a1e7d6655b91a367726b5a743b61e1286658c2fae27ade4ccdd39662349deaa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BTCUtils.sol:9",
        "version": {
          "withMetadata": "7573bef287f88183403789c7e64d2dbc09470b7f55a1348931f8583c1c0987b0",
          "withoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7",
          "linkedWithoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7"
        },
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib",
          "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BytesLib.sol:37",
        "version": {
          "withMetadata": "f2324c71bbe5c8ab35be27d9c50370bf7edf1df6eddf6f369c89c4576118f97f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\SafeMath.sol:33",
        "version": {
          "withMetadata": "de6c9018e6b700296910d156838bc9d0b8ee1110e9b7ccadb24a629f990d5633",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable": {
        "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateReimbursementPool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/ReimbursementPool.sol:ReimbursementPool": {
        "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:48",
        "version": {
          "withMetadata": "a0909f9ca2505d43aae4c412e68c131a562c6f0e55209341952931ca00b953c3",
          "withoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8",
          "linkedWithoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "()",
          "refund(uint256,address)",
          "authorize(address)",
          "unauthorize(address)",
          "setStaticGas(uint256)",
          "setMaxGasPrice(uint256)",
          "withdrawAll(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReimbursementPool",
            "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "isAuthorized",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:55"
            },
            {
              "label": "staticGas",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:57"
            },
            {
              "label": "maxGasPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\utils\\SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "1e4ce95e9a357149db70bc9b9fafc8133910fcc1b2cb441a653064c3fb71deab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "745fe1cc954bf11dcefd69031b31c0c74765abeb5690985ab59dd076464c864c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor": {
        "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:92",
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)4795",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)4821",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_contract(IBridge)4795": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)4821": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridge": {
        "src": "contracts\\integrator\\IBridge.sol:70",
        "inherit": [],
        "libraries": [],
        "methods": [
          "revealDepositWithExtraData((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),bytes32)",
          "deposits(uint256)",
          "depositParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridgeTypes": {
        "src": "contracts\\integrator\\IBridge.sol:39",
        "version": {
          "withMetadata": "b50dd107ae761f3ab15fcd9edceaa3ebc151908aa4224c0d269afbefb04b5fd9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/ITBTCVault.sol:ITBTCVault": {
        "src": "contracts\\integrator\\ITBTCVault.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "optimisticMintingRequests(uint256)",
          "optimisticMintingFeeDivisor()",
          "tbtcToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/L1BitcoinDepositor.sol:L1BitcoinDepositor": {
        "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:82",
        "version": {
          "withMetadata": "8340d8ab698f10b95cb3bb7f83ba4bff1b5ea8e8e24f8e0bed7eaf9d9200914f",
          "withoutMetadata": "a6ee8e05616cabffb964a1fbfba6d1a425cf126ec5a864cdb7d7c660b3cde83e",
          "linkedWithoutMetadata": "a6ee8e05616cabffb964a1fbfba6d1a425cf126ec5a864cdb7d7c660b3cde83e"
        },
        "inherit": [
          "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "contracts/sepolia/Wormhole.sol:WormholeUtils",
          "contracts/sepolia/Wormhole.sol:WormholeTypes"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,address,uint16)",
          "attachL2BitcoinDepositor(address)",
          "updateL2FinalizeDepositGasLimit(uint256)",
          "updateGasOffsetParameters(uint256,uint256)",
          "updateReimbursementAuthorization(address,bool)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "finalizeDeposit(uint256)",
          "quoteFinalizeDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)4795",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)4821",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "49",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "49",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "50",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "100",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "150",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "200",
              "type": "t_mapping(t_uint256,t_enum(DepositState)4846)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:111"
            },
            {
              "label": "tbtcToken",
              "offset": 0,
              "slot": "201",
              "type": "t_contract(IERC20Upgradeable)3379",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:113"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "202",
              "type": "t_contract(IWormhole)5684",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:115"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "203",
              "type": "t_contract(IWormholeRelayer)5724",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:116"
            },
            {
              "label": "wormholeTokenBridge",
              "offset": 0,
              "slot": "204",
              "type": "t_contract(IWormholeTokenBridge)5809",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:117"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:119"
            },
            {
              "label": "l2ChainId",
              "offset": 20,
              "slot": "205",
              "type": "t_uint16",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:121"
            },
            {
              "label": "l2BitcoinDepositor",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:123"
            },
            {
              "label": "l2FinalizeDepositGasLimit",
              "offset": 0,
              "slot": "207",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:128"
            },
            {
              "label": "gasReimbursements",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_uint256,t_struct(GasReimbursement)4853_storage)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:137"
            },
            {
              "label": "initializeDepositGasOffset",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:140"
            },
            {
              "label": "finalizeDepositGasOffset",
              "offset": 0,
              "slot": "210",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:146"
            },
            {
              "label": "reimbursementAuthorizations",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBridge)4795": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)3379": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)4821": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)5684": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)5724": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeTokenBridge)5809": {
              "label": "contract IWormholeTokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_enum(DepositState)4846": {
              "label": "enum L1BitcoinDepositor.DepositState",
              "members": [
                "Unknown",
                "Initialized",
                "Finalized"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(DepositState)4846)": {
              "label": "mapping(uint256 => enum L1BitcoinDepositor.DepositState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GasReimbursement)4853_storage)": {
              "label": "mapping(uint256 => struct L1BitcoinDepositor.GasReimbursement)",
              "numberOfBytes": "32"
            },
            "t_struct(GasReimbursement)4853_storage": {
              "label": "struct L1BitcoinDepositor.GasReimbursement",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "gasSpent",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\sepolia\\Wormhole.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\sepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\sepolia\\Wormhole.sol:54",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\sepolia\\Wormhole.sol:102",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\sepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "d5c171dbdea343879b0f6e66f8b85c4ace2e1ae0dbc109aa34ff9703a61d6dc6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\sepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "a1e7d6655b91a367726b5a743b61e1286658c2fae27ade4ccdd39662349deaa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BTCUtils.sol:9",
        "version": {
          "withMetadata": "7573bef287f88183403789c7e64d2dbc09470b7f55a1348931f8583c1c0987b0",
          "withoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7",
          "linkedWithoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7"
        },
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib",
          "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BytesLib.sol:37",
        "version": {
          "withMetadata": "f2324c71bbe5c8ab35be27d9c50370bf7edf1df6eddf6f369c89c4576118f97f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\SafeMath.sol:33",
        "version": {
          "withMetadata": "de6c9018e6b700296910d156838bc9d0b8ee1110e9b7ccadb24a629f990d5633",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable": {
        "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateReimbursementPool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/ReimbursementPool.sol:ReimbursementPool": {
        "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:48",
        "version": {
          "withMetadata": "a0909f9ca2505d43aae4c412e68c131a562c6f0e55209341952931ca00b953c3",
          "withoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8",
          "linkedWithoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "()",
          "refund(uint256,address)",
          "authorize(address)",
          "unauthorize(address)",
          "setStaticGas(uint256)",
          "setMaxGasPrice(uint256)",
          "withdrawAll(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReimbursementPool",
            "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "isAuthorized",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:55"
            },
            {
              "label": "staticGas",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:57"
            },
            {
              "label": "maxGasPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\utils\\SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "1e4ce95e9a357149db70bc9b9fafc8133910fcc1b2cb441a653064c3fb71deab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "745fe1cc954bf11dcefd69031b31c0c74765abeb5690985ab59dd076464c864c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor": {
        "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:92",
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)4795",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)4821",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_contract(IBridge)4795": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)4821": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridge": {
        "src": "contracts\\integrator\\IBridge.sol:70",
        "inherit": [],
        "libraries": [],
        "methods": [
          "revealDepositWithExtraData((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),bytes32)",
          "deposits(uint256)",
          "depositParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridgeTypes": {
        "src": "contracts\\integrator\\IBridge.sol:39",
        "version": {
          "withMetadata": "b50dd107ae761f3ab15fcd9edceaa3ebc151908aa4224c0d269afbefb04b5fd9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/ITBTCVault.sol:ITBTCVault": {
        "src": "contracts\\integrator\\ITBTCVault.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "optimisticMintingRequests(uint256)",
          "optimisticMintingFeeDivisor()",
          "tbtcToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/L1BitcoinDepositor.sol:L1BitcoinDepositor": {
        "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:82",
        "version": {
          "withMetadata": "8340d8ab698f10b95cb3bb7f83ba4bff1b5ea8e8e24f8e0bed7eaf9d9200914f",
          "withoutMetadata": "a6ee8e05616cabffb964a1fbfba6d1a425cf126ec5a864cdb7d7c660b3cde83e",
          "linkedWithoutMetadata": "a6ee8e05616cabffb964a1fbfba6d1a425cf126ec5a864cdb7d7c660b3cde83e"
        },
        "inherit": [
          "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "contracts/sepolia/Wormhole.sol:WormholeUtils",
          "contracts/sepolia/Wormhole.sol:WormholeTypes"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,address,uint16)",
          "attachL2BitcoinDepositor(address)",
          "updateL2FinalizeDepositGasLimit(uint256)",
          "updateGasOffsetParameters(uint256,uint256)",
          "updateReimbursementAuthorization(address,bool)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "finalizeDeposit(uint256)",
          "quoteFinalizeDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)4795",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)4821",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "49",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "49",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "50",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "100",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "150",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "200",
              "type": "t_mapping(t_uint256,t_enum(DepositState)4846)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:111"
            },
            {
              "label": "tbtcToken",
              "offset": 0,
              "slot": "201",
              "type": "t_contract(IERC20Upgradeable)3379",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:113"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "202",
              "type": "t_contract(IWormhole)5684",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:115"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "203",
              "type": "t_contract(IWormholeRelayer)5724",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:116"
            },
            {
              "label": "wormholeTokenBridge",
              "offset": 0,
              "slot": "204",
              "type": "t_contract(IWormholeTokenBridge)5809",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:117"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:119"
            },
            {
              "label": "l2ChainId",
              "offset": 20,
              "slot": "205",
              "type": "t_uint16",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:121"
            },
            {
              "label": "l2BitcoinDepositor",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:123"
            },
            {
              "label": "l2FinalizeDepositGasLimit",
              "offset": 0,
              "slot": "207",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:128"
            },
            {
              "label": "gasReimbursements",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_uint256,t_struct(GasReimbursement)4853_storage)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:137"
            },
            {
              "label": "initializeDepositGasOffset",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:140"
            },
            {
              "label": "finalizeDepositGasOffset",
              "offset": 0,
              "slot": "210",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:146"
            },
            {
              "label": "reimbursementAuthorizations",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBridge)4795": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)3379": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)4821": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)5684": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)5724": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeTokenBridge)5809": {
              "label": "contract IWormholeTokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_enum(DepositState)4846": {
              "label": "enum L1BitcoinDepositor.DepositState",
              "members": [
                "Unknown",
                "Initialized",
                "Finalized"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(DepositState)4846)": {
              "label": "mapping(uint256 => enum L1BitcoinDepositor.DepositState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GasReimbursement)4853_storage)": {
              "label": "mapping(uint256 => struct L1BitcoinDepositor.GasReimbursement)",
              "numberOfBytes": "32"
            },
            "t_struct(GasReimbursement)4853_storage": {
              "label": "struct L1BitcoinDepositor.GasReimbursement",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "gasSpent",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\sepolia\\Wormhole.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\sepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\sepolia\\Wormhole.sol:54",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\sepolia\\Wormhole.sol:102",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\sepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "d5c171dbdea343879b0f6e66f8b85c4ace2e1ae0dbc109aa34ff9703a61d6dc6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\sepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "a1e7d6655b91a367726b5a743b61e1286658c2fae27ade4ccdd39662349deaa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BTCUtils.sol:9",
        "version": {
          "withMetadata": "7573bef287f88183403789c7e64d2dbc09470b7f55a1348931f8583c1c0987b0",
          "withoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7",
          "linkedWithoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7"
        },
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib",
          "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BytesLib.sol:37",
        "version": {
          "withMetadata": "f2324c71bbe5c8ab35be27d9c50370bf7edf1df6eddf6f369c89c4576118f97f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\SafeMath.sol:33",
        "version": {
          "withMetadata": "de6c9018e6b700296910d156838bc9d0b8ee1110e9b7ccadb24a629f990d5633",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable": {
        "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateReimbursementPool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/ReimbursementPool.sol:ReimbursementPool": {
        "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:48",
        "version": {
          "withMetadata": "a0909f9ca2505d43aae4c412e68c131a562c6f0e55209341952931ca00b953c3",
          "withoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8",
          "linkedWithoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "()",
          "refund(uint256,address)",
          "authorize(address)",
          "unauthorize(address)",
          "setStaticGas(uint256)",
          "setMaxGasPrice(uint256)",
          "withdrawAll(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReimbursementPool",
            "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "isAuthorized",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:55"
            },
            {
              "label": "staticGas",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:57"
            },
            {
              "label": "maxGasPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\utils\\SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "1e4ce95e9a357149db70bc9b9fafc8133910fcc1b2cb441a653064c3fb71deab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "745fe1cc954bf11dcefd69031b31c0c74765abeb5690985ab59dd076464c864c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/L2BitcoinDepositor.sol:IL2WormholeGateway": {
        "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveTbtc(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/L2BitcoinDepositor.sol:L2BitcoinDepositor": {
        "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:51",
        "version": {
          "withMetadata": "5bd07a2d90c701b59c63b5bb38827960fdd25fe508f8bae05585a326b57febe8",
          "withoutMetadata": "6f8a080eb3d81df72370bb32bfb791d146b0b8bb3ffba9da54d6a2155f00b013",
          "linkedWithoutMetadata": "6f8a080eb3d81df72370bb32bfb791d146b0b8bb3ffba9da54d6a2155f00b013"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/arbitrumSepolia/Wormhole.sol:IWormholeReceiver"
        ],
        "libraries": [
          "contracts/arbitrumSepolia/Wormhole.sol:WormholeUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,uint16)",
          "attachL1BitcoinDepositor(address)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IWormholeRelayer)4663",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:55"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IL2WormholeGateway)4393",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:57"
            },
            {
              "label": "l1ChainId",
              "offset": 20,
              "slot": "102",
              "type": "t_uint16",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:62"
            },
            {
              "label": "l1BitcoinDepositor",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IL2WormholeGateway)4393": {
              "label": "contract IL2WormholeGateway",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)4663": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:54",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:102",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "736d8886cd415e64efdb2c9ac9ee4f46ef62ea38395912d4f43b04e096e25ff2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "da22c4bca1e7e718c29829b59cdb8642c45bbd7922a3b284c35f114a35696fcb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor": {
        "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:92",
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)5228",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)5254",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_contract(IBridge)5228": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)5254": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridge": {
        "src": "contracts\\integrator\\IBridge.sol:70",
        "inherit": [],
        "libraries": [],
        "methods": [
          "revealDepositWithExtraData((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),bytes32)",
          "deposits(uint256)",
          "depositParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridgeTypes": {
        "src": "contracts\\integrator\\IBridge.sol:39",
        "version": {
          "withMetadata": "b50dd107ae761f3ab15fcd9edceaa3ebc151908aa4224c0d269afbefb04b5fd9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/ITBTCVault.sol:ITBTCVault": {
        "src": "contracts\\integrator\\ITBTCVault.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "optimisticMintingRequests(uint256)",
          "optimisticMintingFeeDivisor()",
          "tbtcToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/L1BitcoinDepositor.sol:L1BitcoinDepositor": {
        "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:82",
        "version": {
          "withMetadata": "8340d8ab698f10b95cb3bb7f83ba4bff1b5ea8e8e24f8e0bed7eaf9d9200914f",
          "withoutMetadata": "a6ee8e05616cabffb964a1fbfba6d1a425cf126ec5a864cdb7d7c660b3cde83e",
          "linkedWithoutMetadata": "a6ee8e05616cabffb964a1fbfba6d1a425cf126ec5a864cdb7d7c660b3cde83e"
        },
        "inherit": [
          "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "contracts/sepolia/Wormhole.sol:WormholeUtils",
          "contracts/sepolia/Wormhole.sol:WormholeTypes"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,address,uint16)",
          "attachL2BitcoinDepositor(address)",
          "updateL2FinalizeDepositGasLimit(uint256)",
          "updateGasOffsetParameters(uint256,uint256)",
          "updateReimbursementAuthorization(address,bool)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "finalizeDeposit(uint256)",
          "quoteFinalizeDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)5228",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)5254",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "49",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "49",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "50",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "100",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "150",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "200",
              "type": "t_mapping(t_uint256,t_enum(DepositState)5279)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:111"
            },
            {
              "label": "tbtcToken",
              "offset": 0,
              "slot": "201",
              "type": "t_contract(IERC20Upgradeable)3379",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:113"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "202",
              "type": "t_contract(IWormhole)6117",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:115"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "203",
              "type": "t_contract(IWormholeRelayer)6157",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:116"
            },
            {
              "label": "wormholeTokenBridge",
              "offset": 0,
              "slot": "204",
              "type": "t_contract(IWormholeTokenBridge)6242",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:117"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:119"
            },
            {
              "label": "l2ChainId",
              "offset": 20,
              "slot": "205",
              "type": "t_uint16",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:121"
            },
            {
              "label": "l2BitcoinDepositor",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:123"
            },
            {
              "label": "l2FinalizeDepositGasLimit",
              "offset": 0,
              "slot": "207",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:128"
            },
            {
              "label": "gasReimbursements",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_uint256,t_struct(GasReimbursement)5286_storage)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:137"
            },
            {
              "label": "initializeDepositGasOffset",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:140"
            },
            {
              "label": "finalizeDepositGasOffset",
              "offset": 0,
              "slot": "210",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:146"
            },
            {
              "label": "reimbursementAuthorizations",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBridge)5228": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)3379": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)5254": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)6117": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)6157": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeTokenBridge)6242": {
              "label": "contract IWormholeTokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_enum(DepositState)5279": {
              "label": "enum L1BitcoinDepositor.DepositState",
              "members": [
                "Unknown",
                "Initialized",
                "Finalized"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(DepositState)5279)": {
              "label": "mapping(uint256 => enum L1BitcoinDepositor.DepositState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GasReimbursement)5286_storage)": {
              "label": "mapping(uint256 => struct L1BitcoinDepositor.GasReimbursement)",
              "numberOfBytes": "32"
            },
            "t_struct(GasReimbursement)5286_storage": {
              "label": "struct L1BitcoinDepositor.GasReimbursement",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "gasSpent",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\sepolia\\Wormhole.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\sepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\sepolia\\Wormhole.sol:54",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\sepolia\\Wormhole.sol:102",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\sepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "d5c171dbdea343879b0f6e66f8b85c4ace2e1ae0dbc109aa34ff9703a61d6dc6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\sepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "a1e7d6655b91a367726b5a743b61e1286658c2fae27ade4ccdd39662349deaa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BTCUtils.sol:9",
        "version": {
          "withMetadata": "7573bef287f88183403789c7e64d2dbc09470b7f55a1348931f8583c1c0987b0",
          "withoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7",
          "linkedWithoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7"
        },
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib",
          "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BytesLib.sol:37",
        "version": {
          "withMetadata": "f2324c71bbe5c8ab35be27d9c50370bf7edf1df6eddf6f369c89c4576118f97f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\SafeMath.sol:33",
        "version": {
          "withMetadata": "de6c9018e6b700296910d156838bc9d0b8ee1110e9b7ccadb24a629f990d5633",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable": {
        "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateReimbursementPool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/ReimbursementPool.sol:ReimbursementPool": {
        "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:48",
        "version": {
          "withMetadata": "a0909f9ca2505d43aae4c412e68c131a562c6f0e55209341952931ca00b953c3",
          "withoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8",
          "linkedWithoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "()",
          "refund(uint256,address)",
          "authorize(address)",
          "unauthorize(address)",
          "setStaticGas(uint256)",
          "setMaxGasPrice(uint256)",
          "withdrawAll(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReimbursementPool",
            "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "isAuthorized",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:55"
            },
            {
              "label": "staticGas",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:57"
            },
            {
              "label": "maxGasPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\utils\\SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "1e4ce95e9a357149db70bc9b9fafc8133910fcc1b2cb441a653064c3fb71deab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "745fe1cc954bf11dcefd69031b31c0c74765abeb5690985ab59dd076464c864c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor": {
        "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:92",
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)4795",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)4821",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_contract(IBridge)4795": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)4821": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridge": {
        "src": "contracts\\integrator\\IBridge.sol:70",
        "inherit": [],
        "libraries": [],
        "methods": [
          "revealDepositWithExtraData((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),bytes32)",
          "deposits(uint256)",
          "depositParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridgeTypes": {
        "src": "contracts\\integrator\\IBridge.sol:39",
        "version": {
          "withMetadata": "b50dd107ae761f3ab15fcd9edceaa3ebc151908aa4224c0d269afbefb04b5fd9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/ITBTCVault.sol:ITBTCVault": {
        "src": "contracts\\integrator\\ITBTCVault.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "optimisticMintingRequests(uint256)",
          "optimisticMintingFeeDivisor()",
          "tbtcToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/L1BitcoinDepositor.sol:L1BitcoinDepositor": {
        "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:83",
        "version": {
          "withMetadata": "fee8c671ef0b64332752cc2f4d0b04a279f8e817b836048c8444359aae584cae",
          "withoutMetadata": "474c94a50caf8a2aedb92298fbb65c5eaea664750bb7a73a96d07ac8f5f96b49",
          "linkedWithoutMetadata": "474c94a50caf8a2aedb92298fbb65c5eaea664750bb7a73a96d07ac8f5f96b49"
        },
        "inherit": [
          "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "contracts/sepolia/Wormhole.sol:WormholeUtils",
          "contracts/sepolia/Wormhole.sol:WormholeTypes"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,address,uint16)",
          "attachL2BitcoinDepositor(address)",
          "updateL2FinalizeDepositGasLimit(uint256)",
          "updateGasOffsetParameters(uint256,uint256)",
          "updateReimbursementAuthorization(address,bool)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "finalizeDeposit(uint256)",
          "quoteFinalizeDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "bridge",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IBridge)4795",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)4821",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "49",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "99",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "100",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "149",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "150",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "199",
              "type": "t_mapping(t_uint256,t_enum(DepositState)4848)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:112"
            },
            {
              "label": "tbtcToken",
              "offset": 0,
              "slot": "200",
              "type": "t_contract(IERC20Upgradeable)3379",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:114"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "201",
              "type": "t_contract(IWormhole)5670",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:116"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "202",
              "type": "t_contract(IWormholeRelayer)5710",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:117"
            },
            {
              "label": "wormholeTokenBridge",
              "offset": 0,
              "slot": "203",
              "type": "t_contract(IWormholeTokenBridge)5795",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:119"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "204",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:120"
            },
            {
              "label": "l2ChainId",
              "offset": 20,
              "slot": "204",
              "type": "t_uint16",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:122"
            },
            {
              "label": "l2BitcoinDepositor",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:124"
            },
            {
              "label": "l2FinalizeDepositGasLimit",
              "offset": 0,
              "slot": "206",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:129"
            },
            {
              "label": "gasReimbursements",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_uint256,t_struct(GasReimbursement)4855_storage)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:138"
            },
            {
              "label": "initializeDepositGasOffset",
              "offset": 0,
              "slot": "208",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:141"
            },
            {
              "label": "finalizeDepositGasOffset",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:148"
            },
            {
              "label": "reimbursementAuthorizations",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:158"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBridge)4795": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)3379": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)4821": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)5670": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)5710": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeTokenBridge)5795": {
              "label": "contract IWormholeTokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_enum(DepositState)4848": {
              "label": "enum L1BitcoinDepositor.DepositState",
              "members": [
                "Unknown",
                "Initialized",
                "Finalized"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(DepositState)4848)": {
              "label": "mapping(uint256 => enum L1BitcoinDepositor.DepositState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GasReimbursement)4855_storage)": {
              "label": "mapping(uint256 => struct L1BitcoinDepositor.GasReimbursement)",
              "numberOfBytes": "32"
            },
            "t_struct(GasReimbursement)4855_storage": {
              "label": "struct L1BitcoinDepositor.GasReimbursement",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "gasSpent",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\sepolia\\Wormhole.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\sepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\sepolia\\Wormhole.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\sepolia\\Wormhole.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\sepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "db9329b90a13ed8b06429071dc683490cb14fe23ec196601aa29d668caa63e71",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\sepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "c3decae25a59fc9a3aba3ed03463601e1850ec6c51270ca6260d9a46eddf8bff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "745fe1cc954bf11dcefd69031b31c0c74765abeb5690985ab59dd076464c864c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/L2BitcoinDepositor.sol:IL2WormholeGateway": {
        "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveTbtc(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/L2BitcoinDepositor.sol:L2BitcoinDepositor": {
        "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:51",
        "version": {
          "withMetadata": "7c5187fcc51fce7cb64e47d95be73ae5d723e46aad35b9c770d98f12be77abb0",
          "withoutMetadata": "6f8a080eb3d81df72370bb32bfb791d146b0b8bb3ffba9da54d6a2155f00b013",
          "linkedWithoutMetadata": "6f8a080eb3d81df72370bb32bfb791d146b0b8bb3ffba9da54d6a2155f00b013"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/arbitrumSepolia/Wormhole.sol:IWormholeReceiver"
        ],
        "libraries": [
          "contracts/arbitrumSepolia/Wormhole.sol:WormholeUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,uint16)",
          "attachL1BitcoinDepositor(address)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IWormholeRelayer)965",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:55"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IL2WormholeGateway)695",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:59"
            },
            {
              "label": "l1ChainId",
              "offset": 20,
              "slot": "102",
              "type": "t_uint16",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:65"
            },
            {
              "label": "l1BitcoinDepositor",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IL2WormholeGateway)695": {
              "label": "contract IL2WormholeGateway",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)965": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "f3372926934b63822ae3e1a9a289f6973c7ef4611327a3f8bf64effb082edd04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "8de148e564e04d954dfa5416d9f710bbf32d2407a4a8d7f8663ce1bd0f02f245",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridge": {
        "src": "contracts\\integrator\\IBridge.sol:70",
        "inherit": [],
        "libraries": [],
        "methods": [
          "revealDepositWithExtraData((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),bytes32)",
          "deposits(uint256)",
          "depositParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridgeTypes": {
        "src": "contracts\\integrator\\IBridge.sol:39",
        "version": {
          "withMetadata": "b50dd107ae761f3ab15fcd9edceaa3ebc151908aa4224c0d269afbefb04b5fd9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BTCUtils.sol:9",
        "version": {
          "withMetadata": "7573bef287f88183403789c7e64d2dbc09470b7f55a1348931f8583c1c0987b0",
          "withoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7",
          "linkedWithoutMetadata": "987a09ac88b67742f0a47d89638d7a9d601db03eccca3dd32b98c86bb2c9c7e7"
        },
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib",
          "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/BytesLib.sol:BytesLib": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\BytesLib.sol:37",
        "version": {
          "withMetadata": "f2324c71bbe5c8ab35be27d9c50370bf7edf1df6eddf6f369c89c4576118f97f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/bitcoin-spv-sol/contracts/SafeMath.sol:SafeMath": {
        "src": "@keep-network\\bitcoin-spv-sol\\contracts\\SafeMath.sol:33",
        "version": {
          "withMetadata": "de6c9018e6b700296910d156838bc9d0b8ee1110e9b7ccadb24a629f990d5633",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable": {
        "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateReimbursementPool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@keep-network/random-beacon/contracts/ReimbursementPool.sol:ReimbursementPool": {
        "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:48",
        "version": {
          "withMetadata": "a0909f9ca2505d43aae4c412e68c131a562c6f0e55209341952931ca00b953c3",
          "withoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8",
          "linkedWithoutMetadata": "affb2812441f5bfa0f2edc8ccf8e664b7288c62d1a6307b6bff97c02792b54b8"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "()",
          "refund(uint256,address)",
          "authorize(address)",
          "unauthorize(address)",
          "setStaticGas(uint256)",
          "setMaxGasPrice(uint256)",
          "withdrawAll(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReimbursementPool",
            "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "isAuthorized",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:55"
            },
            {
              "label": "staticGas",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:57"
            },
            {
              "label": "maxGasPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ReimbursementPool",
              "src": "@keep-network\\random-beacon\\contracts\\ReimbursementPool.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\utils\\SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "1e4ce95e9a357149db70bc9b9fafc8133910fcc1b2cb441a653064c3fb71deab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "745fe1cc954bf11dcefd69031b31c0c74765abeb5690985ab59dd076464c864c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/L2BitcoinDepositor.sol:IL2WormholeGateway": {
        "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:35",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveTbtc(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/L2BitcoinDepositor.sol:L2BitcoinDepositor": {
        "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:51",
        "version": {
          "withMetadata": "7c5187fcc51fce7cb64e47d95be73ae5d723e46aad35b9c770d98f12be77abb0",
          "withoutMetadata": "6f8a080eb3d81df72370bb32bfb791d146b0b8bb3ffba9da54d6a2155f00b013",
          "linkedWithoutMetadata": "6f8a080eb3d81df72370bb32bfb791d146b0b8bb3ffba9da54d6a2155f00b013"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/arbitrumSepolia/Wormhole.sol:IWormholeReceiver"
        ],
        "libraries": [
          "contracts/arbitrumSepolia/Wormhole.sol:WormholeUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,uint16)",
          "attachL1BitcoinDepositor(address)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IWormholeRelayer)4663",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:55"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "102",
              "type": "t_contract(IL2WormholeGateway)4393",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:59"
            },
            {
              "label": "l1ChainId",
              "offset": 20,
              "slot": "102",
              "type": "t_uint16",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:65"
            },
            {
              "label": "l1BitcoinDepositor",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "L2BitcoinDepositor",
              "src": "contracts\\arbitrumSepolia\\L2BitcoinDepositor.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IL2WormholeGateway)4393": {
              "label": "contract IL2WormholeGateway",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)4663": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "f3372926934b63822ae3e1a9a289f6973c7ef4611327a3f8bf64effb082edd04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/arbitrumSepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\arbitrumSepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "8de148e564e04d954dfa5416d9f710bbf32d2407a4a8d7f8663ce1bd0f02f245",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor": {
        "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:92",
        "inherit": [],
        "libraries": [
          "@keep-network/bitcoin-spv-sol/contracts/BTCUtils.sol:BTCUtils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bridge",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBridge)5228",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)5254",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_contract(IBridge)5228": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)5254": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridge": {
        "src": "contracts\\integrator\\IBridge.sol:70",
        "inherit": [],
        "libraries": [],
        "methods": [
          "revealDepositWithExtraData((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),bytes32)",
          "deposits(uint256)",
          "depositParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/IBridge.sol:IBridgeTypes": {
        "src": "contracts\\integrator\\IBridge.sol:39",
        "version": {
          "withMetadata": "b50dd107ae761f3ab15fcd9edceaa3ebc151908aa4224c0d269afbefb04b5fd9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/integrator/ITBTCVault.sol:ITBTCVault": {
        "src": "contracts\\integrator\\ITBTCVault.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "optimisticMintingRequests(uint256)",
          "optimisticMintingFeeDivisor()",
          "tbtcToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/L1BitcoinDepositor.sol:L1BitcoinDepositor": {
        "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:83",
        "version": {
          "withMetadata": "fee8c671ef0b64332752cc2f4d0b04a279f8e817b836048c8444359aae584cae",
          "withoutMetadata": "474c94a50caf8a2aedb92298fbb65c5eaea664750bb7a73a96d07ac8f5f96b49",
          "linkedWithoutMetadata": "474c94a50caf8a2aedb92298fbb65c5eaea664750bb7a73a96d07ac8f5f96b49"
        },
        "inherit": [
          "@keep-network/random-beacon/contracts/Reimbursable.sol:Reimbursable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/integrator/AbstractTBTCDepositor.sol:AbstractTBTCDepositor",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "contracts/sepolia/Wormhole.sol:WormholeUtils",
          "contracts/sepolia/Wormhole.sol:WormholeTypes"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,address,uint16)",
          "attachL2BitcoinDepositor(address)",
          "updateL2FinalizeDepositGasLimit(uint256)",
          "updateGasOffsetParameters(uint256,uint256)",
          "updateReimbursementAuthorization(address,bool)",
          "initializeDeposit((bytes4,bytes,bytes,bytes4),(uint32,bytes8,bytes20,bytes20,bytes4,address),address)",
          "finalizeDeposit(uint256)",
          "quoteFinalizeDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "bridge",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IBridge)5228",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:95"
            },
            {
              "label": "tbtcVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ITBTCVault)5254",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:96"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)47_storage",
              "contract": "AbstractTBTCDepositor",
              "src": "contracts\\integrator\\AbstractTBTCDepositor.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "49",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "99",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "100",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "reimbursementPool",
              "offset": 0,
              "slot": "149",
              "type": "t_contract(ReimbursementPool)2999",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "150",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Reimbursable",
              "src": "@keep-network\\random-beacon\\contracts\\Reimbursable.sol:51"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "199",
              "type": "t_mapping(t_uint256,t_enum(DepositState)5281)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:112"
            },
            {
              "label": "tbtcToken",
              "offset": 0,
              "slot": "200",
              "type": "t_contract(IERC20Upgradeable)3379",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:114"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "201",
              "type": "t_contract(IWormhole)6103",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:116"
            },
            {
              "label": "wormholeRelayer",
              "offset": 0,
              "slot": "202",
              "type": "t_contract(IWormholeRelayer)6143",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:117"
            },
            {
              "label": "wormholeTokenBridge",
              "offset": 0,
              "slot": "203",
              "type": "t_contract(IWormholeTokenBridge)6228",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:119"
            },
            {
              "label": "l2WormholeGateway",
              "offset": 0,
              "slot": "204",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:120"
            },
            {
              "label": "l2ChainId",
              "offset": 20,
              "slot": "204",
              "type": "t_uint16",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:122"
            },
            {
              "label": "l2BitcoinDepositor",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:124"
            },
            {
              "label": "l2FinalizeDepositGasLimit",
              "offset": 0,
              "slot": "206",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:129"
            },
            {
              "label": "gasReimbursements",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_uint256,t_struct(GasReimbursement)5288_storage)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:138"
            },
            {
              "label": "initializeDepositGasOffset",
              "offset": 0,
              "slot": "208",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:141"
            },
            {
              "label": "finalizeDepositGasOffset",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:148"
            },
            {
              "label": "reimbursementAuthorizations",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "L1BitcoinDepositor",
              "src": "contracts\\sepolia\\L1BitcoinDepositor.sol:158"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBridge)5228": {
              "label": "contract IBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20Upgradeable)3379": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(ITBTCVault)5254": {
              "label": "contract ITBTCVault",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)6103": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeRelayer)6143": {
              "label": "contract IWormholeRelayer",
              "numberOfBytes": "20"
            },
            "t_contract(IWormholeTokenBridge)6228": {
              "label": "contract IWormholeTokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(ReimbursementPool)2999": {
              "label": "contract ReimbursementPool",
              "numberOfBytes": "20"
            },
            "t_enum(DepositState)5281": {
              "label": "enum L1BitcoinDepositor.DepositState",
              "members": [
                "Unknown",
                "Initialized",
                "Finalized"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(DepositState)5281)": {
              "label": "mapping(uint256 => enum L1BitcoinDepositor.DepositState)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GasReimbursement)5288_storage)": {
              "label": "mapping(uint256 => struct L1BitcoinDepositor.GasReimbursement)",
              "numberOfBytes": "32"
            },
            "t_struct(GasReimbursement)5288_storage": {
              "label": "struct L1BitcoinDepositor.GasReimbursement",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "gasSpent",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormhole": {
        "src": "contracts\\sepolia\\Wormhole.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "chainId()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeReceiver": {
        "src": "contracts\\sepolia\\Wormhole.sol:85",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeRelayer": {
        "src": "contracts\\sepolia\\Wormhole.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteEVMDeliveryPrice(uint16,uint256,uint256)",
          "sendVaasToEvm(uint16,address,bytes,uint256,uint256,struct WormholeTypes.VaaKey[],uint16,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:IWormholeTokenBridge": {
        "src": "contracts\\sepolia\\Wormhole.sol:103",
        "inherit": [],
        "libraries": [],
        "methods": [
          "completeTransferWithPayload(bytes)",
          "parseTransferWithPayload(bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeTypes": {
        "src": "contracts\\sepolia\\Wormhole.sol:31",
        "version": {
          "withMetadata": "db9329b90a13ed8b06429071dc683490cb14fe23ec196601aa29d668caa63e71",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/sepolia/Wormhole.sol:WormholeUtils": {
        "src": "contracts\\sepolia\\Wormhole.sol:142",
        "version": {
          "withMetadata": "c3decae25a59fc9a3aba3ed03463601e1850ec6c51270ca6260d9a46eddf8bff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}